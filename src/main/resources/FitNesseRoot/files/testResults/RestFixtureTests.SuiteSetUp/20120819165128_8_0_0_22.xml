<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20111024</FitNesseVersion>
  <rootPath>SuiteSetUp</rootPath>
    <result>
    <counts>
      <right>8</right>
      <wrong>0</wrong>
      <ignores>0</ignores>
      <exceptions>22</exceptions>
    </counts>
    <content><![CDATA[<div class="collapse_rim">
	<div style="float: right;" class="meta">
		<a href="javascript:expandAll();">Expand All</a>
 | 
		<a href="javascript:collapseAll();">Collapse All</a>
	</div>
	<a href="javascript:toggleCollapsable('9');">
		<img src="/files/images/collapsableClosed.gif" class="left" id="img9"/>
	</a>
&nbsp;
	<span class="meta">Precompiled Libraries</span>
	<div class="hidden" id="9"><br/></div>
</div>
<table border="1" cellspacing="0" _TABLENUMBER=2164909631555520741>
	<tr>
		<td>start <span class="error">Could not invoke constructor for start[1]</span></td>
		<td colspan="2">smartrics.rest.test.fitnesse.fixture.HttpServerFixture <span class="error">The instance decisionTable_0. does not exist</span></td>
	</tr>
	<tr>
		<td>check</td>
		<td>is started</td>
		<td>false</td>
	</tr>
	<tr>
		<td>enter <span class="error">The instance decisionTable_0. does not exist</span></td>
		<td>start server <span class="error">The instance decisionTable_0. does not exist</span></td>
		<td>8765 <span class="error">The instance decisionTable_0. does not exist</span></td>
	</tr>
	<tr>
		<td>check <span class="error">The instance decisionTable_0. does not exist</span></td>
		<td>is started <span class="error">The instance decisionTable_0. does not exist</span></td>
		<td>true <span class="error">The instance decisionTable_0. does not exist</span></td>
	</tr>
</table>
<br/>Default configuration parameters for each RestFixture instance<br/><ul>
	<li><b>http.client.connection.timeout</b> the client http timeout</li>
	<li><b>http.client.use.new.http.uri.factory</b> If set to true the Rest Fixture uses a more relaxed validation rule to validate URIs. It, for example, allows array parameters in the query string. Defaults to false.</li>
	<li><b>restfixture.display.actual.on.right</b> wether the actual value of headers and body are displayed when an expectation is met</li>
	<li><b>restfixture.display.content.collapsed.larger.than</b> minimum lenght of the content of a cell to enable a toggle on/off button (-1 to disable)</li>
	<li><b>restfixture.default.headers</b> list of http headers passed to each REST request (overridden by <b>setHeader</b>)</li>
	<li><b>restfixture.xml.namespace.context</b> list of key/value defining a namespace context. (keys represent aliases used in XPaths, values are the ns URI as per xml)</li>
	<li><b>restfixture.content.handlers.map</b> key-value-pair mapping a Content-Type to a RestFixture content handler.</li>
	<li><b>restfixture.content.default.charset</b> the default charset to use if the response doesn't specify one in the result. If this property isn't specified, it defaults to Charset.defaultCharset().name().</li>
	<li><b>restfixture.null.value.representation</b> value used to replace the default Fitnesse symbols value for null (default is the string 'null')</li>
</ul>
 <br/><table border="1" cellspacing="0" _TABLENUMBER=8637835074438195659>
	<tr>
		<td colspan="2"><span class="pass">Table:smartrics.rest.fitnesse.fixture.RestFixtureConfig</span></td>
	</tr>
	<tr>
		<td>http.client.connection.timeout</td>
		<td><span class="pass">5000</span></td>
	</tr>
	<tr>
		<td>http.client.use.new.http.uri.factory</td>
		<td><span class="pass">false</span></td>
	</tr>
	<tr>
		<td>restfixture.display.actual.on.right</td>
		<td><span class="pass">true</span></td>
	</tr>
	<tr>
		<td>restfixture.display.toggle.for.cells.larger.than</td>
		<td><span class="pass">200</span></td>
	</tr>
	<tr>
		<td>restfixture.default.headers</td>
		<td><span class="pass">defHeader&nbsp;:&nbsp;1<br/>anotherDefHeader&nbsp;:&nbsp;2<br/></span></td>
	</tr>
	<tr>
		<td>restfixture.xml.namespace.context</td>
		<td><span class="pass">ns1alias=http://smartrics/ns1<br/>defalias=http://smartrics/defns<br/></span></td>
	</tr>
	<tr>
		<td>restfixture.content.default.charset</td>
		<td><span class="pass">UTF-8</span></td>
	</tr>
	<tr>
		<td>restfixture.content.handlers.map</td>
		<td><span class="pass">application/xml=XML<br/>application/json=JSON<br/>text/plain=TEXT<br/>default=XML<br/>application/x-javascript=JS<br/></span></td>
	</tr>
</table>
]]></content>
    <relativePageName>SuiteSetUp</relativePageName>
    
        <tables>
            <table>
        <name>decisionTable_0</name>
                <row>
                    <col><![CDATA[start error(Could not invoke constructor for start[1])]]></col>
                    <col><![CDATA[smartrics.rest.test.fitnesse.fixture.HttpServerFixture error(The instance decisionTable_0. does not exist)]]></col>
          
        </row>
                <row>
                    <col><![CDATA[check]]></col>
                    <col><![CDATA[is started]]></col>
                    <col><![CDATA[false]]></col>
          
        </row>
                <row>
                    <col><![CDATA[enter error(The instance decisionTable_0. does not exist)]]></col>
                    <col><![CDATA[start server error(The instance decisionTable_0. does not exist)]]></col>
                    <col><![CDATA[8765 error(The instance decisionTable_0. does not exist)]]></col>
          
        </row>
                <row>
                    <col><![CDATA[check error(The instance decisionTable_0. does not exist)]]></col>
                    <col><![CDATA[is started error(The instance decisionTable_0. does not exist)]]></col>
                    <col><![CDATA[true error(The instance decisionTable_0. does not exist)]]></col>
          
        </row>
        
      </table>
            <table>
        <name>tableTable_1</name>
                <row>
                    <col><![CDATA[pass(Table:smartrics.rest.fitnesse.fixture.RestFixtureConfig)]]></col>
          
        </row>
                <row>
                    <col><![CDATA[http.client.connection.timeout]]></col>
                    <col><![CDATA[pass(5000)]]></col>
          
        </row>
                <row>
                    <col><![CDATA[http.client.use.new.http.uri.factory]]></col>
                    <col><![CDATA[pass(false)]]></col>
          
        </row>
                <row>
                    <col><![CDATA[restfixture.display.actual.on.right]]></col>
                    <col><![CDATA[pass(true)]]></col>
          
        </row>
                <row>
                    <col><![CDATA[restfixture.display.toggle.for.cells.larger.than]]></col>
                    <col><![CDATA[pass(200)]]></col>
          
        </row>
                <row>
                    <col><![CDATA[restfixture.default.headers]]></col>
                    <col><![CDATA[pass(defHeader&nbsp;:&nbsp;1<br/>anotherDefHeader&nbsp;:&nbsp;2<br/>)]]></col>
          
        </row>
                <row>
                    <col><![CDATA[restfixture.xml.namespace.context]]></col>
                    <col><![CDATA[pass(ns1alias=http://smartrics/ns1<br/>defalias=http://smartrics/defns<br/>)]]></col>
          
        </row>
                <row>
                    <col><![CDATA[restfixture.content.default.charset]]></col>
                    <col><![CDATA[pass(UTF-8)]]></col>
          
        </row>
                <row>
                    <col><![CDATA[restfixture.content.handlers.map]]></col>
                    <col><![CDATA[pass(application/xml=XML<br/>application/json=JSON<br/>text/plain=TEXT<br/>default=XML<br/>application/x-javascript=JS<br/>)]]></col>
          
        </row>
        
      </table>
      
    </tables>
    
    
    <instructions>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_0_0, make, decisionTable_0, start, smartrics.rest.test.fitnesse.fixture.HttpServerFixture]]]></instruction>
        <slimResult><![CDATA[!error:Could not invoke constructor for start[1]]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_0_0</instructionId>
          <col>0</col>
          <row>0</row>
          <type>ConstructionExpectation</type>
                    <actual><![CDATA[!error:Could not invoke constructor for start[1]]]></actual>
                              <expected><![CDATA[start]]></expected>
                              <evaluationMessage><![CDATA[start error(Could not invoke constructor for start[1])]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_0_1, call, decisionTable_0, table, [[check, is started, false], [enter, start server, 8765], [check, is started, true]]]]]></instruction>
        <slimResult><![CDATA[!error:The instance decisionTable_0. does not exist]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_0_1</instructionId>
          <col>1</col>
          <row>0</row>
          <type>VoidReturnExpectation</type>
                    <actual><![CDATA[!error:The instance decisionTable_0. does not exist]]></actual>
                              <expected><![CDATA[smartrics.rest.test.fitnesse.fixture.HttpServerFixture]]></expected>
                              <evaluationMessage><![CDATA[smartrics.rest.test.fitnesse.fixture.HttpServerFixture error(The instance decisionTable_0. does not exist)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_0_2, call, decisionTable_0, beginTable]]]></instruction>
        <slimResult><![CDATA[!error:The instance decisionTable_0. does not exist]]></slimResult>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_0_3, call, decisionTable_0, reset]]]></instruction>
        <slimResult><![CDATA[!error:The instance decisionTable_0. does not exist]]></slimResult>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_0_4, call, decisionTable_0, setCheck, enter]]]></instruction>
        <slimResult><![CDATA[!error:The instance decisionTable_0. does not exist]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_0_4</instructionId>
          <col>0</col>
          <row>2</row>
          <type>VoidReturnExpectation</type>
                    <actual><![CDATA[!error:The instance decisionTable_0. does not exist]]></actual>
                              <expected><![CDATA[enter]]></expected>
                              <evaluationMessage><![CDATA[enter error(The instance decisionTable_0. does not exist)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_0_5, call, decisionTable_0, setIsStarted, start server]]]></instruction>
        <slimResult><![CDATA[!error:The instance decisionTable_0. does not exist]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_0_5</instructionId>
          <col>1</col>
          <row>2</row>
          <type>VoidReturnExpectation</type>
                    <actual><![CDATA[!error:The instance decisionTable_0. does not exist]]></actual>
                              <expected><![CDATA[start server]]></expected>
                              <evaluationMessage><![CDATA[start server error(The instance decisionTable_0. does not exist)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_0_6, call, decisionTable_0, setFalse, 8765]]]></instruction>
        <slimResult><![CDATA[!error:The instance decisionTable_0. does not exist]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_0_6</instructionId>
          <col>2</col>
          <row>2</row>
          <type>VoidReturnExpectation</type>
                    <actual><![CDATA[!error:The instance decisionTable_0. does not exist]]></actual>
                              <expected><![CDATA[8765]]></expected>
                              <evaluationMessage><![CDATA[8765 error(The instance decisionTable_0. does not exist)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_0_7, call, decisionTable_0, execute]]]></instruction>
        <slimResult><![CDATA[!error:The instance decisionTable_0. does not exist]]></slimResult>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_0_8, call, decisionTable_0, reset]]]></instruction>
        <slimResult><![CDATA[!error:The instance decisionTable_0. does not exist]]></slimResult>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_0_9, call, decisionTable_0, setCheck, check]]]></instruction>
        <slimResult><![CDATA[!error:The instance decisionTable_0. does not exist]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_0_9</instructionId>
          <col>0</col>
          <row>3</row>
          <type>VoidReturnExpectation</type>
                    <actual><![CDATA[!error:The instance decisionTable_0. does not exist]]></actual>
                              <expected><![CDATA[check]]></expected>
                              <evaluationMessage><![CDATA[check error(The instance decisionTable_0. does not exist)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_0_10, call, decisionTable_0, setIsStarted, is started]]]></instruction>
        <slimResult><![CDATA[!error:The instance decisionTable_0. does not exist]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_0_10</instructionId>
          <col>1</col>
          <row>3</row>
          <type>VoidReturnExpectation</type>
                    <actual><![CDATA[!error:The instance decisionTable_0. does not exist]]></actual>
                              <expected><![CDATA[is started]]></expected>
                              <evaluationMessage><![CDATA[is started error(The instance decisionTable_0. does not exist)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_0_11, call, decisionTable_0, setFalse, true]]]></instruction>
        <slimResult><![CDATA[!error:The instance decisionTable_0. does not exist]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>decisionTable_0_11</instructionId>
          <col>2</col>
          <row>3</row>
          <type>VoidReturnExpectation</type>
                    <actual><![CDATA[!error:The instance decisionTable_0. does not exist]]></actual>
                              <expected><![CDATA[true]]></expected>
                              <evaluationMessage><![CDATA[true error(The instance decisionTable_0. does not exist)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_0_12, call, decisionTable_0, execute]]]></instruction>
        <slimResult><![CDATA[!error:The instance decisionTable_0. does not exist]]></slimResult>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[decisionTable_0_13, call, decisionTable_0, endTable]]]></instruction>
        <slimResult><![CDATA[!error:The instance decisionTable_0. does not exist]]></slimResult>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[tableTable_1_0, make, tableTable_1, smartrics.rest.fitnesse.fixture.RestFixtureConfig]]]></instruction>
        <slimResult><![CDATA[OK]]></slimResult>
                <expectation>
          <status>right</status>
          <instructionId>tableTable_1_0</instructionId>
          <col>0</col>
          <row>0</row>
          <type>ConstructionExpectation</type>
                    <actual><![CDATA[OK]]></actual>
                              <expected><![CDATA[Table:smartrics.rest.fitnesse.fixture.RestFixtureConfig]]></expected>
                              <evaluationMessage><![CDATA[pass(Table:smartrics.rest.fitnesse.fixture.RestFixtureConfig)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[tableTable_1_1, call, tableTable_1, doTable, [[http.client.connection.timeout, 5000], [http.client.use.new.http.uri.factory, false], [restfixture.display.actual.on.right, true], [restfixture.display.toggle.for.cells.larger.than, 200], [restfixture.default.headers, defHeader : 1
anotherDefHeader : 2
], [restfixture.xml.namespace.context, ns1alias=http://smartrics/ns1
defalias=http://smartrics/defns
], [restfixture.content.default.charset, UTF-8], [restfixture.content.handlers.map, application/xml=XML
application/json=JSON
text/plain=TEXT
default=XML
application/x-javascript=JS
]]]]]></instruction>
        <slimResult><![CDATA[[[, pass:5000], [, pass:false], [, pass:true], [, pass:200], [, pass:defHeader&nbsp;:&nbsp;1<br/>anotherDefHeader&nbsp;:&nbsp;2<br/>], [, pass:ns1alias=http://smartrics/ns1<br/>defalias=http://smartrics/defns<br/>], [, pass:UTF-8], [, pass:application/xml=XML<br/>application/json=JSON<br/>text/plain=TEXT<br/>default=XML<br/>application/x-javascript=JS<br/>]]]]></slimResult>
        
      </instructionResult>
      
    </instructions>
    
  </result>
  
  
  <finalCounts>
    <right>0</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  
</testResults>

