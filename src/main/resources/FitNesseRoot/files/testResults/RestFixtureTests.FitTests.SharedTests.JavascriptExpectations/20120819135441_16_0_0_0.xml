<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20111024</FitNesseVersion>
  <rootPath>JavascriptExpectations</rootPath>
    <result>
    <counts>
      <right>16</right>
      <wrong>0</wrong>
      <ignores>0</ignores>
      <exceptions>0</exceptions>
    </counts>
    <content><![CDATA[<br/><div class="collapse_rim">
	<div style="float: right;" class="meta">
		<a href="javascript:expandAll();">Expand All</a>
 | 
		<a href="javascript:collapseAll();">Collapse All</a>
	</div>
	<a href="javascript:toggleCollapsable('174');">
		<img src="/files/images/collapsableClosed.gif" class="left" id="img174"/>
	</a>
&nbsp;
	<span class="meta">Included page: <a href="RestFixtureTests.FitTests.SharedTests.SetUp">.RestFixtureTests.FitTests.SharedTests.SetUp</a> <a href="RestFixtureTests.FitTests.SharedTests.SetUp?edit&amp;redirectToReferer=true&amp;redirectAction=">(edit)</a></span>
	<div class="hidden" id="174"><table border="1" cellspacing="0">
	<tr>
		<td colspan="3">Action Fixture</td>
	</tr>
	<tr>
		<td>start</td>
		<td colspan="2">smartrics.rest.test.fitnesse.fixture.HttpServerFixture</td>
	</tr>
	<tr>
		<td>check</td>
		<td>is started</td>
		<td class="pass">true</td>
	</tr>
	<tr>
		<td>press</td>
		<td colspan="2">reset resources database</td>
	</tr>
</table>
<br/></div>
</div>
<br/><h3>Expectations in Javascript on responses with content type application/json</h3>
<br/><br/>As of RestFixture Version 2, a javascript engine is embedded to allow expectations in Javascript on response body contents in JSON format.<br/><br/><div class="collapse_rim">
	<div style="float: right;" class="meta">
		<a href="javascript:expandAll();">Expand All</a>
 | 
		<a href="javascript:collapseAll();">Collapse All</a>
	</div>
	<a href="javascript:toggleCollapsable('175');">
		<img src="/files/images/collapsableOpen.gif" class="left" id="img175"/>
	</a>
&nbsp;
	<span class="meta">XPaths and JSON</span>
	<div class="collapsable" id="175">For backward compatibility XPath expressions are maintained and executed<br/></div>
</div>
<br/><br/>After a successful response is received with content type "application/json" the expectation cell in a RestFixture<a title="create page" href="RestFixtureTests.FitTests.SharedTests.RestFixture?edit&nonExistent=true">[?]</a> row is <br/>interpreted as a string with Javascript and executed within the context of the response body.<br/><br/><table border="1" cellspacing="0">
	<tr>
		<td>smartrics.rest.fitnesse.fixture.RestFixture</td>
		<td colspan="4"><a href="http://localhost:8765">http://localhost:8765</a></td>
	</tr>
	<tr>
		<td>setBody</td>
		<td colspan="4" class="pass">&nbsp;{&nbsp;"resource"&nbsp;:&nbsp;{&nbsp;"name"&nbsp;:&nbsp;"test&nbsp;post",&nbsp;"data"&nbsp;:&nbsp;"some&nbsp;data"&nbsp;}&nbsp;}&nbsp;<br/> <span class="fit_label">expected</span><hr/><br/>{&nbsp;"resource"&nbsp;:&nbsp;{&nbsp;"name"&nbsp;:&nbsp;"test&nbsp;post",&nbsp;"data"&nbsp;:&nbsp;"some&nbsp;data"&nbsp;}&nbsp;}<br/> <span class="fit_label">actual</span></td>
	</tr>
	<tr>
		<td>POST</td>
		<td><a href='http://localhost:8765/resources/'>/resources/</a></td>
		<td class="pass">201</td>
		<td> <span class="fit_grey">Location&nbsp;:&nbsp;/resources/2<br/>Content-Length&nbsp;:&nbsp;0<br/>Server&nbsp;:&nbsp;Jetty(6.0.2)</span></td>
		<td class="pass">no-body</td>
	</tr>
	<tr>
		<td>let</td>
		<td>id</td>
		<td>header</td>
		<td> <span class="fit_grey">Location:/resources/(.+)</span></td>
		<td> <span class="fit_grey">2</span></td>
	</tr>
</table>
<br/>A variable &lt;code&gt;jsonbody&lt;/code&gt; is defined holding the JSON in the response.<br/><br/>The test passes if the result of the evaluation of the cell is a boolean.<br/><br/><table border="1" cellspacing="0">
	<tr>
		<td>smartrics.rest.fitnesse.fixture.RestFixture</td>
		<td colspan="4"><a href="http://localhost:8765">http://localhost:8765</a></td>
	</tr>
	<tr>
		<td>GET</td>
		<td><a href='http://localhost:8765/resources/2.json'>/resources/2.json</a></td>
		<td class="pass">200</td>
		<td class="pass">Content-Type&nbsp;:&nbsp;application/json<br/> <span class="fit_label">expected</span><hr/><br/>Content-Type&nbsp;:&nbsp;application/json;charset=ISO-8859-1<br/>Content-Length&nbsp;:&nbsp;63<br/>Server&nbsp;:&nbsp;Jetty(6.0.2)<br/> <span class="fit_label">actual</span></td>
		<td class="pass"><br/>jsonbody.resource.name=="test&nbsp;post"&nbsp;&&&nbsp;jsonbody.resource.data=="some&nbsp;data"&nbsp;<br/><br/> <span class="fit_label">expected</span><hr/><br/>{&nbsp;"resource"&nbsp;:&nbsp;{&nbsp;"name"&nbsp;:&nbsp;"test&nbsp;post",&nbsp;"data"&nbsp;:&nbsp;"some&nbsp;data"&nbsp;}&nbsp;}<br/> <span class="fit_label">actual</span></td>
	</tr>
	<tr>
		<td>GET</td>
		<td><a href='http://localhost:8765/resources/2.json'>/resources/2.json</a></td>
		<td class="pass">200</td>
		<td class="pass">Content-Type&nbsp;:&nbsp;application/json<br/> <span class="fit_label">expected</span><hr/><br/>Content-Type&nbsp;:&nbsp;application/json;charset=ISO-8859-1<br/>Content-Length&nbsp;:&nbsp;63<br/>Server&nbsp;:&nbsp;Jetty(6.0.2)<br/> <span class="fit_label">actual</span></td>
		<td class="pass"><br/>jsonbody.resource.name.length&gt;=0&nbsp;<br/><br/> <span class="fit_label">expected</span><hr/><br/>{&nbsp;"resource"&nbsp;:&nbsp;{&nbsp;"name"&nbsp;:&nbsp;"test&nbsp;post",&nbsp;"data"&nbsp;:&nbsp;"some&nbsp;data"&nbsp;}&nbsp;}<br/> <span class="fit_label">actual</span></td>
	</tr>
	<tr>
		<td>let</td>
		<td>content</td>
		<td>js</td>
		<td> <span class="fit_grey">response.body</span></td>
		<td> <span class="fit_grey">{ "resource" : { "name" : "test post", "data" : "some data" } }</span></td>
	</tr>
</table>
<br/><table border="1" cellspacing="0">
	<tr>
		<td>smartrics.rest.fitnesse.fixture.RestFixture</td>
		<td colspan="4"><a href="http://localhost:8765">http://localhost:8765</a></td>
	</tr>
	<tr>
		<td>setBody</td>
		<td colspan="4" class="pass">%content%<br/> <span class="fit_label">expected</span><hr/><br/>{&nbsp;"resource"&nbsp;:&nbsp;{&nbsp;"name"&nbsp;:&nbsp;"test&nbsp;post",&nbsp;"data"&nbsp;:&nbsp;"some&nbsp;data"&nbsp;}&nbsp;}<br/> <span class="fit_label">actual</span></td>
	</tr>
	<tr>
		<td>POST</td>
		<td><a href='http://localhost:8765/resources/'>/resources/</a></td>
		<td class="pass">201</td>
		<td> <span class="fit_grey">Location&nbsp;:&nbsp;/resources/3<br/>Content-Length&nbsp;:&nbsp;0<br/>Server&nbsp;:&nbsp;Jetty(6.0.2)</span></td>
		<td class="pass">no-body</td>
	</tr>
	<tr>
		<td>let</td>
		<td>id</td>
		<td>header</td>
		<td> <span class="fit_grey">Location:/resources/(.+)</span></td>
		<td> <span class="fit_grey">3</span></td>
	</tr>
</table>
<br/>In some cases may be useful to force evaluation of the expectation cell as a javascript block. <br/>By embedding the &lt;code&gt;/* javascript */&lt;/code&gt; comment, the whole expectation cell will be parsed and evaluated entirely using the javascript interpreter.<br/><br/><table border="1" cellspacing="0">
	<tr>
		<td>smartrics.rest.fitnesse.fixture.RestFixture</td>
		<td colspan="4"><a href="http://localhost:8765">http://localhost:8765</a></td>
	</tr>
	<tr>
		<td>GET</td>
		<td><a href='http://localhost:8765/resources/3.json'>/resources/3.json</a></td>
		<td class="pass">200</td>
		<td class="pass">Content-Type&nbsp;:&nbsp;application/json<br/> <span class="fit_label">expected</span><hr/><br/>Content-Type&nbsp;:&nbsp;application/json;charset=ISO-8859-1<br/>Content-Length&nbsp;:&nbsp;63<br/>Server&nbsp;:&nbsp;Jetty(6.0.2)<br/> <span class="fit_label">actual</span></td>
		<td class="pass"><br/>/*&nbsp;javascript&nbsp;*/<br/>var&nbsp;concat&nbsp;=&nbsp;jsonbody.resource.name&nbsp;+&nbsp;"&nbsp;and&nbsp;"&nbsp;+&nbsp;jsonbody.resource.data<br/>concat=="test&nbsp;post&nbsp;and&nbsp;some&nbsp;data"&nbsp;<br/><br/> <span class="fit_label">expected</span><hr/><br/>{&nbsp;"resource"&nbsp;:&nbsp;{&nbsp;"name"&nbsp;:&nbsp;"test&nbsp;post",&nbsp;"data"&nbsp;:&nbsp;"some&nbsp;data"&nbsp;}&nbsp;}<br/> <span class="fit_label">actual</span></td>
	</tr>
	<tr>
		<td>let</td>
		<td>content</td>
		<td>js</td>
		<td> <span class="fit_grey">response.body</span></td>
		<td> <span class="fit_grey">{ "resource" : { "name" : "test post", "data" : "some data" } }</span></td>
	</tr>
</table>
<br/>]]></content>
    <relativePageName>JavascriptExpectations</relativePageName>
    
    
    
  </result>
  
  
  <finalCounts>
    <right>0</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  
</testResults>

