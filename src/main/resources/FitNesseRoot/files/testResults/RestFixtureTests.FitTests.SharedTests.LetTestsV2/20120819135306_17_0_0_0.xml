<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20111024</FitNesseVersion>
  <rootPath>LetTestsV2</rootPath>
    <result>
    <counts>
      <right>17</right>
      <wrong>0</wrong>
      <ignores>0</ignores>
      <exceptions>0</exceptions>
    </counts>
    <content><![CDATA[<br/><div class="collapse_rim">
	<div style="float: right;" class="meta">
		<a href="javascript:expandAll();">Expand All</a>
 | 
		<a href="javascript:collapseAll();">Collapse All</a>
	</div>
	<a href="javascript:toggleCollapsable('88');">
		<img src="/files/images/collapsableClosed.gif" class="left" id="img88"/>
	</a>
&nbsp;
	<span class="meta">Included page: <a href="RestFixtureTests.FitTests.SharedTests.SetUp">.RestFixtureTests.FitTests.SharedTests.SetUp</a> <a href="RestFixtureTests.FitTests.SharedTests.SetUp?edit&amp;redirectToReferer=true&amp;redirectAction=">(edit)</a></span>
	<div class="hidden" id="88"><table border="1" cellspacing="0">
	<tr>
		<td colspan="3">Action Fixture</td>
	</tr>
	<tr>
		<td>start</td>
		<td colspan="2">smartrics.rest.test.fitnesse.fixture.HttpServerFixture</td>
	</tr>
	<tr>
		<td>check</td>
		<td>is started</td>
		<td class="pass">true</td>
	</tr>
	<tr>
		<td>press</td>
		<td colspan="2">reset resources database</td>
	</tr>
</table>
<br/></div>
</div>
<br/><h3>LET</h3>
<br/><br/>LET can use now the full power of JavaScript to extract data from the last response parts. The additions<br/>to support the new JavaScript extensions will not break the existing RestFixture API.<br/><br/>The JavaScript extensions can be used to process more effectively JSON <i>Content-Type</i>s.<br/><br/><i>LET can access the Fitnesse Symbols map to extract data previously stored</i><br/><br/>If the context of the let context is <i>js</i> the expression is evaluated as a javascript string. The value assigned<br/>to the let label is the result of the evaluation of the content in the expression cell.<br/><br/>For example:<br/><br/><table border="1" cellspacing="0">
	<tr>
		<td>smartrics.rest.fitnesse.fixture.RestFixture</td>
		<td colspan="4"><a href="http://localhost:8765">http://localhost:8765</a></td>
	</tr>
	<tr>
		<td>let</td>
		<td>message</td>
		<td>js</td>
		<td> <span class="fit_grey">'Hello,&nbsp;World!'</span></td>
		<td class="pass">Hello,&nbsp;World!</td>
	</tr>
	<tr>
		<td>let</td>
		<td>sum</td>
		<td>js</td>
		<td> <span class="fit_grey">'2&nbsp;+&nbsp;5&nbsp;=&nbsp;'&nbsp;+&nbsp;(2&nbsp;+&nbsp;5)</span></td>
		<td class="pass">2&nbsp;+&nbsp;5&nbsp;=&nbsp;7</td>
	</tr>
	<tr>
		<td>let</td>
		<td>two_expressions</td>
		<td>js</td>
		<td> <span class="fit_grey">a=1;<br/>'a&nbsp;is&nbsp;'&nbsp;+&nbsp;a</span></td>
		<td class="pass">a&nbsp;is&nbsp;1</td>
	</tr>
	<tr>
		<td>let</td>
		<td>json_expr</td>
		<td>js</td>
		<td> <span class="fit_grey"><br/>json&nbsp;=&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;"widget":&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"debug":&nbsp;"on",<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"window":&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"title":&nbsp;"Sample&nbsp;Konfabulator&nbsp;Widget",<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"name":&nbsp;"main_window",<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"width":&nbsp;500,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"height":&nbsp;500<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"image":&nbsp;{&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"src":&nbsp;"Images/Sun.png",<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"name":&nbsp;"sun1",<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"hOffset":&nbsp;250,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"vOffset":&nbsp;250,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"alignment":&nbsp;"center"<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"text":&nbsp;{<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"data":&nbsp;"Click&nbsp;Here",<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"size":&nbsp;36,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"style":&nbsp;"bold",<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"name":&nbsp;"text1",<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"hOffset":&nbsp;250,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"vOffset":&nbsp;100,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"alignment":&nbsp;"center",<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"onMouseUp":&nbsp;"sun1.opacity&nbsp;=&nbsp;(sun1.opacity&nbsp;/&nbsp;100)&nbsp;*&nbsp;90;"<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>};<br/>json.widget.image.src<br/></span></td>
		<td class="pass">Images/Sun.png</td>
	</tr>
</table>
<br/>(Example courtesy of <a href="http://json.org/example.html)">http://json.org/example.html)</a><br/><br/>It's also possible to access the FitNesse symbols map. The scope where expression is evaluated contains the <br/>'symbols' object <br/><br/><table border="1" cellspacing="0">
	<tr>
		<td>smartrics.rest.fitnesse.fixture.RestFixture</td>
		<td colspan="4"><a href="http://localhost:8765">http://localhost:8765</a></td>
	</tr>
	<tr>
		<td>setBody</td>
		<td colspan="4" class="pass">&lt;resource&gt;&lt;name&gt;Bill&lt;/name&gt;&lt;data&gt;Some&nbsp;data&nbsp;on&nbsp;Bill&lt;/data&gt;&lt;/resource&gt;<br/> <span class="fit_label">expected</span><hr/><br/>&lt;resource&gt;&lt;name&gt;Bill&lt;/name&gt;&lt;data&gt;Some&nbsp;data&nbsp;on&nbsp;Bill&lt;/data&gt;&lt;/resource&gt;<br/> <span class="fit_label">actual</span></td>
	</tr>
	<tr>
		<td>POST</td>
		<td><a href='http://localhost:8765/resources/'>/resources/</a></td>
		<td class="pass">201</td>
		<td> <span class="fit_grey">Location&nbsp;:&nbsp;/resources/2<br/>Content-Length&nbsp;:&nbsp;0<br/>Server&nbsp;:&nbsp;Jetty(6.0.2)</span></td>
		<td class="pass">no-body</td>
	</tr>
	<tr>
		<td>let</td>
		<td>id</td>
		<td>header</td>
		<td> <span class="fit_grey">Location:/resources/(.+)</span></td>
		<td> <span class="fit_grey">2</span></td>
	</tr>
	<tr>
		<td>let</td>
		<td>id_string</td>
		<td>js</td>
		<td> <span class="fit_grey">'The&nbsp;id&nbsp;is:&nbsp;'&nbsp;+&nbsp;symbols.get('id')</span></td>
		<td class="pass">The&nbsp;id&nbsp;is:&nbsp;2</td>
	</tr>
</table>
<br/>The scope also contains the 'response' object, populated with the data from the last Rest response executed<br/><br/>For example<br/><br/><table border="1" cellspacing="0">
	<tr>
		<td>smartrics.rest.fitnesse.fixture.RestFixture</td>
		<td colspan="4"><a href="http://localhost:8765">http://localhost:8765</a></td>
	</tr>
	<tr>
		<td>GET</td>
		<td><a href='http://localhost:8765/resources/1'>/resources/1</a></td>
		<td class="pass">200</td>
		<td> <span class="fit_grey">Content-Type&nbsp;:&nbsp;application/xml;charset=ISO-8859-1<br/>Content-Length&nbsp;:&nbsp;77<br/>Server&nbsp;:&nbsp;Jetty(6.0.2)</span></td>
		<td> <span class="fit_grey">{&nbsp;"resource"&nbsp;:&nbsp;{&nbsp;"name"&nbsp;:&nbsp;"a&nbsp;funky&nbsp;name",&nbsp;"data"&nbsp;:&nbsp;"an&nbsp;important&nbsp;message"&nbsp;}&nbsp;}</span></td>
	</tr>
	<tr>
		<td>let</td>
		<td>body_value</td>
		<td>js</td>
		<td> <span class="fit_grey">response.body</span></td>
		<td> <span class="fit_grey">{ "resource" : { "name" : "a funky name", "data" : "an important message" } }</span></td>
	</tr>
	<tr>
		<td>setBody</td>
		<td colspan="4" class="pass">&lt;resource&gt;&lt;name&gt;Bill&lt;/name&gt;&lt;data&gt;Some&nbsp;data&nbsp;on&nbsp;Bill&lt;/data&gt;&lt;/resource&gt;<br/> <span class="fit_label">expected</span><hr/><br/>&lt;resource&gt;&lt;name&gt;Bill&lt;/name&gt;&lt;data&gt;Some&nbsp;data&nbsp;on&nbsp;Bill&lt;/data&gt;&lt;/resource&gt;<br/> <span class="fit_label">actual</span></td>
	</tr>
	<tr>
		<td>POST</td>
		<td><a href='http://localhost:8765/resources/'>/resources/</a></td>
		<td class="pass">201</td>
		<td> <span class="fit_grey">Location&nbsp;:&nbsp;/resources/3<br/>Content-Length&nbsp;:&nbsp;0<br/>Server&nbsp;:&nbsp;Jetty(6.0.2)</span></td>
		<td class="pass">no-body</td>
	</tr>
	<tr>
		<td>let</td>
		<td>status_code_value</td>
		<td>js</td>
		<td> <span class="fit_grey">response.statusCode</span></td>
		<td> <span class="fit_grey">201</span></td>
	</tr>
	<tr>
		<td>let</td>
		<td>status_text_value</td>
		<td>js</td>
		<td> <span class="fit_grey">response.statusText</span></td>
		<td> <span class="fit_grey">Created</span></td>
	</tr>
	<tr>
		<td>let</td>
		<td>c_len</td>
		<td>js</td>
		<td> <span class="fit_grey">response.header0('Content-Length')</span></td>
		<td class="pass">0</td>
	</tr>
	<tr>
		<td>let</td>
		<td>loc_again</td>
		<td>js</td>
		<td> <span class="fit_grey">response.header('Location',&nbsp;0)</span></td>
		<td> <span class="fit_grey">/resources/3</span></td>
	</tr>
	<tr>
		<td>let</td>
		<td>h_size</td>
		<td>js</td>
		<td> <span class="fit_grey">response.headerListSize('Location')</span></td>
		<td class="pass">1</td>
	</tr>
	<tr>
		<td>let</td>
		<td>all_h_size</td>
		<td>js</td>
		<td> <span class="fit_grey">response.headersSize()</span></td>
		<td> <span class="fit_grey">3</span></td>
	</tr>
</table>
<br/>A particoular case is when the response is JSON (Content-Type : application/json). In such case, the property <b>jsonbody</b><br/>contains the JSON object that can be accessed using the dot notation. For example<br/><br/><table border="1" cellspacing="0">
	<tr>
		<td>smartrics.rest.fitnesse.fixture.RestFixture</td>
		<td colspan="4"><a href="http://localhost:8765">http://localhost:8765</a></td>
	</tr>
	<tr>
		<td>GET</td>
		<td><a href='http://localhost:8765/resources/1.json'>/resources/1.json</a></td>
		<td class="pass">200</td>
		<td> <span class="fit_grey">Content-Type&nbsp;:&nbsp;application/json;charset=ISO-8859-1<br/>Content-Length&nbsp;:&nbsp;77<br/>Server&nbsp;:&nbsp;Jetty(6.0.2)</span></td>
		<td> <span class="fit_grey">{&nbsp;"resource"&nbsp;:&nbsp;{&nbsp;"name"&nbsp;:&nbsp;"a&nbsp;funky&nbsp;name",&nbsp;"data"&nbsp;:&nbsp;"an&nbsp;important&nbsp;message"&nbsp;}&nbsp;}</span></td>
	</tr>
	<tr>
		<td>let</td>
		<td>body_value</td>
		<td>js</td>
		<td> <span class="fit_grey">response.jsonbody</span></td>
		<td> <span class="fit_grey">[object Object]</span></td>
	</tr>
	<tr>
		<td>let</td>
		<td>body_value</td>
		<td>js</td>
		<td> <span class="fit_grey">response.jsonbody.resource.name</span></td>
		<td class="pass">a&nbsp;funky&nbsp;name</td>
	</tr>
</table>
<br/><br/><br/>]]></content>
    <relativePageName>LetTestsV2</relativePageName>
    
    
    
  </result>
  
  
  <finalCounts>
    <right>0</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  
</testResults>

